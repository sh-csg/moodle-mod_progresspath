{"version":3,"file":"renderer.min.js","sources":["../src/renderer.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Renderer module for the progresspath.\n *\n * @module     mod_progresspath/renderer\n * @copyright   2025 ISB Bayern\n * @author      Stefan Hanauska <stefan.hanauska@csg-in.de>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport Ajax from 'core/ajax';\nimport Log from 'core/log';\nimport Pending from 'core/pending';\n\nexport const selectors = {\n    PROGRESSPATH_RENDER_CONTAINER_PREFIX: 'progresspath-render-container-'\n};\n\n/**\n * Renders the progresspath into the correct div.\n *\n * @param {number} cmId the course module id of the progresspath\n */\nexport const init = (cmId) => {\n    const rendererPendingPromise = new Pending('mod_progresspath/renderer-' + cmId);\n    renderProgresspath(cmId);\n    rendererPendingPromise.resolve();\n};\n\n/**\n * Render the progresspath with the given cmId into the corresponding div in the DOM.\n *\n * @param {number} cmId the course module id of the progresspath\n */\nexport const renderProgresspath = (cmId) => {\n    const promises = Ajax.call(\n        [\n            {\n                methodname: 'mod_progresspath_get_progresspath',\n                args: {\n                    'cmId': cmId\n                }\n            }\n        ]);\n\n    promises[0].then(data => {\n        const targetDiv = document.getElementById(selectors.PROGRESSPATH_RENDER_CONTAINER_PREFIX + cmId);\n        targetDiv.innerHTML = data.content;\n        return true;\n    }).catch((error) => {\n        Log.error(error);\n        return false;\n    });\n};\n"],"names":["selectors","PROGRESSPATH_RENDER_CONTAINER_PREFIX","cmId","rendererPendingPromise","Pending","renderProgresspath","resolve","Ajax","call","methodname","args","then","data","document","getElementById","innerHTML","content","catch","error"],"mappings":";;;;;;;;uPA2BaA,UAAY,CACrBC,qCAAsC,6EAQrBC,aACXC,uBAAyB,IAAIC,iBAAQ,6BAA+BF,MAC1EG,mBAAmBH,MACnBC,uBAAuBG,iBAQdD,mBAAsBH,OACdK,cAAKC,KAClB,CACI,CACIC,WAAY,oCACZC,KAAM,MACMR,SAKf,GAAGS,MAAKC,OACKC,SAASC,eAAed,UAAUC,qCAAuCC,MACjFa,UAAYH,KAAKI,SACpB,KACRC,OAAOC,qBACFA,MAAMA,QACH"}